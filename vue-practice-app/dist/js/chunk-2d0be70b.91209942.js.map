{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?eea7"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","useField","yup","trim","required","value","errorMessage","handleBlur","PASSWORD_MIN_LENGTH","min","values","console","log","dispatch","push","setup","route","query","message","error","render"],"mappings":"2IAEI,eAAwB,UAApB,mBAAe,G,EAGjB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAMxB,eAAoC,SAA7BA,IAAI,YAAW,UAAM,G,0DAVhC,eAgBO,QAhBDC,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CAC1C,EAEA,eAIM,OAJAD,MAAK,yBAA6B,EAAAE,U,CACtC,E,eACA,eAA6D,SAAtDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAIM,OAJAF,MAAK,yBAA6B,EAAAO,U,CACtC,E,eACA,eAAsE,SAA/DJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAAiF,UAAzEJ,KAAK,SAASH,MAAM,cAAeU,SAAU,EAAAC,cAAc,QAAK,iB,sGCXrE,SAASC,IACZ,IAAMC,EAAQC,iBACRC,EAASC,iBAFY,EAGUC,iBAA9BC,EAHoB,EAGpBA,aAAcP,EAHM,EAGNA,aAHM,EAKqCQ,eAC5D,QACAC,SACKC,OACAC,SAAS,4BACTjB,MAAM,uCALDA,EALa,EAKpBkB,MAA4BrB,EALR,EAKNsB,aAAkClB,EAL5B,EAKgBmB,WAQrCC,EAAsB,EAbD,EAewCP,eAC/D,WACAC,SACKC,OACAC,SAAS,6BACTK,IAAID,EAHT,sCAG6DA,EAH7D,eAFUlB,EAfa,EAepBe,MAA+BhB,EAfX,EAeHiB,aAAkCf,EAf/B,EAemBgB,WAQxCxB,EAAWiB,EAAY,yDAAC,WAAMU,GAAN,wFAC1BC,QAAQC,IAAI,QAASF,GADK,kBAGhBf,EAAMkB,SAAS,aAAcH,GAHb,OAItBb,EAAOiB,KAAK,KAJU,0GAAD,uDAS7B,MAAO,CACH3B,QACAG,WACAN,SACAK,SACAD,QACAG,QACAR,WACAU,gB,gBDnBO,GACbsB,MADa,WAEX,IAAMC,EAAQ,iBACRrB,EAAQ,iBAQd,OANIqB,EAAMC,MAAMC,SACdvB,EAAMkB,SAAS,aAAc,CAC3BR,MAAO,OAAAc,EAAA,MAAMH,EAAMC,MAAMC,SACzBjC,KAAM,YAGV,kBAAWS,OElCf,EAAO0B,OAASA,EAED","file":"js/chunk-2d0be70b.91209942.js","sourcesContent":["<template>\r\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\r\n    <h1>Войти в систему</h1>\r\n\r\n    <div :class=\"['form-control', {invalid: eError}]\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\">\r\n      <small v-if=\"eError\">{{ eError }}</small>\r\n    </div>\r\n\r\n    <div :class=\"['form-control', {invalid: pError}]\">\r\n      <label for=\"password\">Пароль</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\r\n      <small v-if=\"pError\">{{ pError }}</small>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn primary\" :disabled=\"isSubmitting\">Войти</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport {useLoginForm} from '@/use/login-form'\r\nimport {useRoute} from 'vue-router'\r\nimport {useStore} from 'vuex'\r\nimport {error} from '@/utils/error'\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute()\r\n    const store = useStore()\r\n\r\n    if (route.query.message) {\r\n      store.dispatch('setMessage', {\r\n        value: error(route.query.message),\r\n        type: 'warning'\r\n      })\r\n    }\r\n    return {...useLoginForm()}\r\n  }\r\n}\r\n</script>\r\n","import {useField, useForm} from 'vee-validate'\r\nimport * as yup from 'yup'\r\nimport {useStore} from 'vuex'\r\nimport {useRouter} from 'vue-router'\r\n\r\nexport function useLoginForm() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const {handleSubmit, isSubmitting} = useForm()\r\n\r\n    const {value: email, errorMessage: eError, handleBlur: eBlur} = useField(\r\n        'email',\r\n        yup.string()\r\n            .trim()\r\n            .required('Пожалуйста введите email')\r\n            .email('Необходимо ввести корректный email')\r\n    )\r\n\r\n    const PASSWORD_MIN_LENGTH = 6\r\n\r\n    const {value: password, errorMessage: pError, handleBlur: pBlur} = useField(\r\n        'password',\r\n        yup.string()\r\n            .trim()\r\n            .required('Пожалуйста введите пароль')\r\n            .min(PASSWORD_MIN_LENGTH, `Пароль не может быть меньше ${PASSWORD_MIN_LENGTH} символов`)\r\n    )\r\n\r\n    const onSubmit = handleSubmit(async values => {\r\n        console.log('Form:', values)\r\n        try {\r\n            await store.dispatch('auth/login', values)\r\n            router.push('/')\r\n        } catch (e) {\r\n        }\r\n    })\r\n\r\n    return {\r\n        email,\r\n        password,\r\n        eError,\r\n        pError,\r\n        eBlur,\r\n        pBlur,\r\n        onSubmit,\r\n        isSubmitting\r\n    }\r\n}\r\n","import { render } from \"./Auth.vue?vue&type=template&id=1f9bd10a\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}